{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/ai/dialog/tempchunk": {
      "get": {
        "summary": "Get Temp Dialog Chunk",
        "operationId": "get_temp_dialog_chunk_ai_dialog_tempchunk_get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "index",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ai/dialog/clear_temp": {
      "post": {
        "summary": "Clear Temp Dialog Chunks",
        "operationId": "clear_temp_dialog_chunks_ai_dialog_clear_temp_post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/debug_audio": {
      "get": {
        "summary": "Debug Audio",
        "operationId": "debug_audio_storage_admin_debug_audio_get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ai/dialog/status": {
      "get": {
        "summary": "Get Dialog Status",
        "operationId": "get_dialog_status_ai_dialog_status_get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ai/dialog/cancel": {
      "post": {
        "summary": "Cancel Dialog Job",
        "operationId": "cancel_dialog_job_ai_dialog_cancel_post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ai/dialog/start": {
      "post": {
        "summary": "Start Dialog Job",
        "operationId": "start_dialog_job_ai_dialog_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeechRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai/claude": {
      "post": {
        "summary": "Claude Endpoint",
        "operationId": "claude_endpoint_ai_claude_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prompt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai/chatgpt": {
      "post": {
        "summary": "Chatgpt Endpoint",
        "operationId": "chatgpt_endpoint_ai_chatgpt_post",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OpenAI model id or alias; default gpt-4o",
              "title": "Model"
            },
            "description": "OpenAI model id or alias; default gpt-4o"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prompt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ai/gemini": {
      "post": {
        "summary": "Gemini Endpoint",
        "operationId": "gemini_endpoint_ai_gemini_post",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Gemini model id or alias; default gemini-1.5-flash",
              "title": "Model"
            },
            "description": "Gemini model id or alias; default gemini-1.5-flash"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ai/generate_speech": {
      "post": {
        "summary": "Generate Speech Endpoint",
        "description": "Handles both single voice TTS and complex audio drama generation.",
        "operationId": "generate_speech_endpoint_ai_generate_speech_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeechRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai/genimage": {
      "post": {
        "summary": "Generate Image Endpoint",
        "description": "Generates an image from a text prompt using Google's Vertex AI Imagen and saves it to storage.",
        "operationId": "generate_image_endpoint_ai_genimage_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai/upscale": {
      "post": {
        "summary": "Upscale Image Endpoint",
        "description": "Upscales an input image using Stability AI's v2beta fast upscale endpoint and saves it.\nAccepts either a base64 data URL (req.image_b64) or a direct image URL (req.image_url).",
        "operationId": "upscale_image_endpoint_ai_upscale_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpscaleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai/gensfx": {
      "post": {
        "summary": "Generate Sfx Endpoint",
        "description": "Generates a sound effect, analyzes its volume, and saves it to storage if it's not silent.",
        "operationId": "generate_sfx_endpoint_ai_gensfx_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudioGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai/genmusic": {
      "post": {
        "summary": "Generate Music Endpoint",
        "description": "Generates a music track from a text prompt using Stable Audio via AIMLAPI\nand saves it to storage.",
        "operationId": "generate_music_endpoint_ai_genmusic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudioGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai/genmusic_eleven": {
      "post": {
        "summary": "Generate Music Eleven Endpoint",
        "description": "Generates a music track from a text prompt using ElevenLabs Music API\nand saves it to storage.",
        "operationId": "generate_music_eleven_endpoint_ai_genmusic_eleven_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudioGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai_gendepth": {
      "post": {
        "summary": "Start Depth Generation Job",
        "description": "Starts a new depth map generation job by calling the external Artificial Studio API.",
        "operationId": "start_depth_generation_job_ai_gendepth_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepthJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/ai_gendepth_webhook/{job_id}": {
      "post": {
        "summary": "Receive Depth Generation Webhook",
        "description": "Webhook for the external service to call when the job is complete.",
        "operationId": "receive_depth_generation_webhook_ai_gendepth_webhook__job_id__post",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Result"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ai_gendepth_result/{job_id}": {
      "get": {
        "summary": "Get Depth Generation Result",
        "description": "Fetches the result of a depth map generation job.",
        "operationId": "get_depth_generation_result_ai_gendepth_result__job_id__get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/auth/register": {
      "post": {
        "tags": [
          "artrack-auth"
        ],
        "summary": "Register",
        "description": "Register a new user",
        "operationId": "register_artrack_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/auth/login": {
      "post": {
        "tags": [
          "artrack-auth"
        ],
        "summary": "Login",
        "description": "Login user",
        "operationId": "login_artrack_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/auth/me": {
      "get": {
        "tags": [
          "artrack-auth"
        ],
        "summary": "Get Me",
        "description": "Get current user info",
        "operationId": "get_me_artrack_auth_me_get",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/auth/google": {
      "post": {
        "tags": [
          "artrack-auth"
        ],
        "summary": "Google Login",
        "description": "Login/Register via Firebase Google ID token and return api_key.",
        "operationId": "google_login_artrack_auth_google_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/auth/refresh": {
      "post": {
        "tags": [
          "artrack-auth"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token (placeholder - in real app would use refresh token)",
        "operationId": "refresh_token_artrack_auth_refresh_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/": {
      "post": {
        "tags": [
          "artrack-tracks"
        ],
        "summary": "Create Track",
        "description": "Create a new track",
        "operationId": "create_track_artrack_tracks__post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "artrack-tracks"
        ],
        "summary": "List Tracks",
        "description": "List tracks",
        "operationId": "list_tracks_artrack_tracks__get",
        "parameters": [
          {
            "name": "visibility",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Visibility"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackResponse"
                  },
                  "title": "Response List Tracks Artrack Tracks  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}": {
      "get": {
        "tags": [
          "artrack-tracks"
        ],
        "summary": "Get Track",
        "description": "Get track details",
        "operationId": "get_track_artrack_tracks__track_id__get",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "artrack-tracks"
        ],
        "summary": "Delete Track",
        "description": "Delete a track",
        "operationId": "delete_track_artrack_tracks__track_id__delete",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "artrack-tracks"
        ],
        "summary": "Update Track",
        "description": "Update a track",
        "operationId": "update_track_artrack_tracks__track_id__put",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/{track_id}/waypoints": {
      "post": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Create Waypoints",
        "description": "Create waypoints for a track",
        "operationId": "create_waypoints_artrack__track_id__waypoints_post",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaypointBatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaypointBatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/waypoints/{waypoint_id}/status": {
      "get": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Get Waypoint Status",
        "description": "Get waypoint processing status",
        "operationId": "get_waypoint_status_artrack_waypoints__waypoint_id__status_get",
        "parameters": [
          {
            "name": "waypoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Waypoint Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaypointStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}/waypoints/detail": {
      "get": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "List Waypoints Detail",
        "description": "Return full waypoint details for a given track (coords, times, media summary).",
        "operationId": "list_waypoints_detail_artrack_tracks__track_id__waypoints_detail_get",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "segment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Segment Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaypointDetailResponse"
                  },
                  "title": "Response List Waypoints Detail Artrack Tracks  Track Id  Waypoints Detail Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/upload/{session_id}/complete": {
      "post": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Complete Upload Session",
        "description": "Complete upload session and finalize waypoint",
        "operationId": "complete_upload_session_artrack_upload__session_id__complete_post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_complete_upload_session_artrack_upload__session_id__complete_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/upload/{session_id}/{media_slot}": {
      "post": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Upload Media File",
        "description": "Upload media file for a waypoint",
        "operationId": "upload_media_file_artrack_upload__session_id___media_slot__post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "media_slot",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Media Slot"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Content-Hash"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_media_file_artrack_upload__session_id___media_slot__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/waypoints/": {
      "get": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "List Waypoints",
        "description": "List waypoints",
        "operationId": "list_waypoints_artrack_waypoints__get",
        "parameters": [
          {
            "name": "track_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "segment_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Segment Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaypointListItem"
                  },
                  "title": "Response List Waypoints Artrack Waypoints  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/upload/{session_id}/{media_slot}/init": {
      "post": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Init Chunked Upload",
        "operationId": "init_chunked_upload_artrack_upload__session_id___media_slot__init_post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "media_slot",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Media Slot"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChunkInitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkInitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/upload/{session_id}/{media_slot}/parts/{index}": {
      "put": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Upload Chunk Part",
        "operationId": "upload_chunk_part_artrack_upload__session_id___media_slot__parts__index__put",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "media_slot",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Media Slot"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Index"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_chunk_part_artrack_upload__session_id___media_slot__parts__index__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/upload/{session_id}/{media_slot}/complete-chunked": {
      "post": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Complete Chunked Upload",
        "operationId": "complete_chunked_upload_artrack_upload__session_id___media_slot__complete_chunked_post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "media_slot",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Media Slot"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChunkCompleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/waypoints/{waypoint_id}": {
      "get": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Get Waypoint Detail",
        "operationId": "get_waypoint_detail_artrack_waypoints__waypoint_id__get",
        "parameters": [
          {
            "name": "waypoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Waypoint Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaypointDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Update Waypoint",
        "operationId": "update_waypoint_artrack_waypoints__waypoint_id__put",
        "parameters": [
          {
            "name": "waypoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Waypoint Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaypointUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "artrack-waypoints"
        ],
        "summary": "Delete Waypoint",
        "operationId": "delete_waypoint_artrack_waypoints__waypoint_id__delete",
        "parameters": [
          {
            "name": "waypoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Waypoint Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/sync/status": {
      "get": {
        "tags": [
          "artrack-sync"
        ],
        "summary": "Get Sync Status",
        "description": "Get sync status for current user",
        "operationId": "get_sync_status_artrack_sync_status_get",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/sync/retry-failed": {
      "post": {
        "tags": [
          "artrack-sync"
        ],
        "summary": "Retry Failed Uploads",
        "description": "Retry failed uploads",
        "operationId": "retry_failed_uploads_artrack_sync_retry_failed_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/sync/user-stats": {
      "get": {
        "tags": [
          "artrack-sync"
        ],
        "summary": "Get User Stats",
        "description": "Get detailed user statistics",
        "operationId": "get_user_stats_artrack_sync_user_stats_get",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/sync/cleanup": {
      "post": {
        "tags": [
          "artrack-sync"
        ],
        "summary": "Cleanup Failed Data",
        "description": "Clean up failed uploads and orphaned data",
        "operationId": "cleanup_failed_data_artrack_sync_cleanup_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/sync/health": {
      "get": {
        "tags": [
          "artrack-sync"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_artrack_sync_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}/gps-points": {
      "post": {
        "tags": [
          "artrack-gps"
        ],
        "summary": "Create Gps Point",
        "description": "Create a single GPS point for real-time tracking",
        "operationId": "create_gps_point_artrack_tracks__track_id__gps_points_post",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GPSPointCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GPSPointResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "artrack-gps"
        ],
        "summary": "Get Gps Points",
        "description": "Get GPS track points for a track",
        "operationId": "get_gps_points_artrack_tracks__track_id__gps_points_get",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1000,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "segment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Segment Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GPSPointResponse"
                  },
                  "title": "Response Get Gps Points Artrack Tracks  Track Id  Gps Points Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "artrack-gps"
        ],
        "summary": "Clear Gps Points",
        "description": "Clear all GPS points for a track (owner only)",
        "operationId": "clear_gps_points_artrack_tracks__track_id__gps_points_delete",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Clear Gps Points Artrack Tracks  Track Id  Gps Points Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}/gps-points/batch": {
      "post": {
        "tags": [
          "artrack-gps"
        ],
        "summary": "Create Gps Point Batch",
        "description": "Create multiple GPS points in a batch for efficient sync",
        "operationId": "create_gps_point_batch_artrack_tracks__track_id__gps_points_batch_post",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GPSPointBatchCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GPSPointBatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}/gps-stats": {
      "get": {
        "tags": [
          "artrack-gps"
        ],
        "summary": "Get Gps Track Statistics",
        "description": "Get comprehensive GPS track statistics",
        "operationId": "get_gps_track_statistics_artrack_tracks__track_id__gps_stats_get",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GPSTrackStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/batch-status/{batch_id}": {
      "get": {
        "tags": [
          "artrack-gps"
        ],
        "summary": "Get Batch Processing Status",
        "description": "Get the processing status of a GPS point batch",
        "operationId": "get_batch_processing_status_artrack_tracks_batch_status__batch_id__get",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Batch Processing Status Artrack Tracks Batch Status  Batch Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}/segments/start": {
      "post": {
        "tags": [
          "artrack-segments"
        ],
        "summary": "Start Segment",
        "operationId": "start_segment_artrack_tracks__track_id__segments_start_post",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentStartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentStartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}/segments/{segment_id}/end": {
      "post": {
        "tags": [
          "artrack-segments"
        ],
        "summary": "End Segment",
        "operationId": "end_segment_artrack_tracks__track_id__segments__segment_id__end_post",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Segment Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentEndRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentEndResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/tracks/{track_id}/segments": {
      "get": {
        "tags": [
          "artrack-segments"
        ],
        "summary": "List Segments",
        "operationId": "list_segments_artrack_tracks__track_id__segments_get",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SegmentItem"
                  },
                  "title": "Response List Segments Artrack Tracks  Track Id  Segments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/{track_id}/guide": {
      "post": {
        "tags": [
          "artrack-guide"
        ],
        "summary": "Build Guide From Track",
        "description": "Build iOS Guide JSON from a track's waypoints.\n\nBody params (optional):\n  - siteId, siteName, description\n  - voice: { provider, style, speed, pitch, language }\n  - audioSettings: { crossfadeDuration, maxNarrationLength, volumeNormalization,\n                    continuousNarration, continuousInterval, ambientGuide, ambientInterval,\n                    poiAwareness, poiAwarenessDistance, poiAwarenessInterval }\n  - defaultRadius (meters)\n  - enterMultiplier, exitMultiplier, cooldownSeconds\n  - persona, backgroundMusic",
        "operationId": "build_guide_from_track_artrack__track_id__guide_post",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/stats/overview": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Overview Stats",
        "operationId": "admin_overview_stats_artrack_admin_stats_overview_get",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOverview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/users": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Users",
        "operationId": "admin_users_artrack_admin_users_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/tracks": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Tracks",
        "operationId": "admin_tracks_artrack_admin_tracks_get",
        "parameters": [
          {
            "name": "visibility",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Visibility"
            }
          },
          {
            "name": "track_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Track Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminTracksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/waypoints/moderation": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Moderation Queue",
        "operationId": "admin_moderation_queue_artrack_admin_waypoints_moderation_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "pending",
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationQueueResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/waypoints/{waypoint_id}/moderate": {
      "post": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Moderate Waypoint",
        "operationId": "admin_moderate_waypoint_artrack_admin_waypoints__waypoint_id__moderate_post",
        "parameters": [
          {
            "name": "waypoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Waypoint Id"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/system/health": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin System Health",
        "operationId": "admin_system_health_artrack_admin_system_health_get",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealth"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/activity/feed": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Activity Feed",
        "description": "Return a mixed feed of recent activities (waypoints, tracks, users).",
        "operationId": "admin_activity_feed_artrack_admin_activity_feed_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityItem"
                  },
                  "title": "Response Admin Activity Feed Artrack Admin Activity Feed Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/analytics/usage": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Analytics Usage",
        "description": "Return usage analytics series and breakdowns for charts.\n\nResponse shape:\n{\n  \"series\": [ { \"date\": \"YYYY-MM-DD\", \"users\": int, \"tracks\": int, \"waypoints\": int } ],\n  \"trackTypes\": [ { \"name\": str, \"value\": int, \"color\": str } ],\n  \"storage\": [ { \"date\": \"YYYY-MM-DD\", \"storage\": float } ]  # GB\n}",
        "operationId": "admin_analytics_usage_artrack_admin_analytics_usage_get",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "7d",
              "title": "Timeframe"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsUsage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/analytics/performance": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Analytics Performance",
        "description": "Return performance metrics. If unavailable, return null values so UI shows N/A.",
        "operationId": "admin_analytics_performance_artrack_admin_analytics_performance_get",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/logs/errors": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Logs Errors",
        "description": "Return recent error/warning log lines from api.log if present.",
        "operationId": "admin_logs_errors_artrack_admin_logs_errors_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorLog"
                  },
                  "title": "Response Admin Logs Errors Artrack Admin Logs Errors Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/tracks/{track_id}": {
      "delete": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Delete Track",
        "description": "Delete a track as admin (bypasses ownership).",
        "operationId": "admin_delete_track_artrack_admin_tracks__track_id__delete",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Track Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/storage": {
      "get": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Storage List",
        "description": "List stored files across all users for administration.",
        "operationId": "admin_storage_list_artrack_admin_storage_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Owner Id"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminStorageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/artrack/admin/storage/{object_id}": {
      "delete": {
        "tags": [
          "artrack-admin"
        ],
        "summary": "Admin Storage Delete",
        "description": "Delete a storage object and its file (admin-only). Also cancels Mac transcoding if active.",
        "operationId": "admin_storage_delete_artrack_admin_storage__object_id__delete",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/upload": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Upload File",
        "operationId": "upload_file_storage_upload_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_storage_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/fetch": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Fetch And Store Remote",
        "operationId": "fetch_and_store_remote_storage_fetch_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteFetchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/objects/{object_id}/analyze": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Analyze Existing Object",
        "operationId": "analyze_existing_object_storage_objects__object_id__analyze_post",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/objects/{object_id}": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Get Object Metadata",
        "operationId": "get_object_metadata_storage_objects__object_id__get",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storage"
        ],
        "summary": "Update Object Metadata",
        "operationId": "update_object_metadata_storage_objects__object_id__patch",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageObjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/list": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "List Objects",
        "operationId": "list_objects_storage_list_get",
        "parameters": [
          {
            "name": "mine",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Mine"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context"
            }
          },
          {
            "name": "collection_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Collection Id"
            }
          },
          {
            "name": "link_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Link Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/files/{object_id}": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Download File",
        "operationId": "download_file_storage_files__object_id__get",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Replace File",
        "operationId": "replace_file_storage_files__object_id__put",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_replace_file_storage_files__object_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/objects/{object_id}/like": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Like Object",
        "operationId": "like_object_storage_objects__object_id__like_post",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/{object_id}": {
      "delete": {
        "tags": [
          "storage"
        ],
        "summary": "Delete Object",
        "operationId": "delete_object_storage__object_id__delete",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/cleanup/by-age": {
      "post": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Admin Cleanup By Age",
        "description": "Deletes all storage objects older than a specified number of days.",
        "operationId": "admin_cleanup_by_age_storage_admin_cleanup_by_age_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CleanupByAgeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/cleanup/by-user": {
      "post": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Admin Cleanup By User",
        "description": "Purges all storage objects owned by a specific user by their email.",
        "operationId": "admin_cleanup_by_user_storage_admin_cleanup_by_user_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CleanupByUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/cleanup/by-collection": {
      "post": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Admin Cleanup By Collection",
        "description": "Deletes all storage objects within a specific collection.",
        "operationId": "admin_cleanup_by_collection_storage_admin_cleanup_by_collection_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CleanupByCollectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/users-with-collections": {
      "get": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Get Users With Collections",
        "description": "Get all users who have collections in storage",
        "operationId": "get_users_with_collections_storage_admin_users_with_collections_get",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserWithCollections"
                  },
                  "title": "Response Get Users With Collections Storage Admin Users With Collections Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/find-by-mac-job/{job_id}": {
      "get": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Admin Find Storage By Mac Job",
        "description": "Find storage object by mac_job_id in metadata_json",
        "operationId": "admin_find_storage_by_mac_job_storage_admin_find_by_mac_job__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/collections": {
      "get": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Get Collections For User",
        "description": "Get collections for a specific user or public collections",
        "operationId": "get_collections_for_user_storage_admin_collections_get",
        "parameters": [
          {
            "name": "user_email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            }
          },
          {
            "name": "public_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Public Only"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionInfo"
                  },
                  "title": "Response Get Collections For User Storage Admin Collections Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/transfer_owner_by_link": {
      "post": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Transfer Owner By Link",
        "description": "Admin-only: Transfer ownership of all storage objects that share the given link_id\nto the user identified by owner_email. Creates the user if necessary.",
        "operationId": "transfer_owner_by_link_storage_admin_transfer_owner_by_link_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwnerByLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/admin/trigger-processing/{object_id}": {
      "post": {
        "tags": [
          "storage-admin"
        ],
        "summary": "Admin Trigger Processing",
        "description": "Manually trigger processing for a storage object (admin-only)",
        "operationId": "admin_trigger_processing_storage_admin_trigger_processing__object_id__post",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Object Id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/logs": {
      "post": {
        "tags": [
          "logs"
        ],
        "summary": "Create Log",
        "operationId": "create_log_logs_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "List Logs",
        "operationId": "list_logs_logs_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          },
          {
            "name": "app_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "App Name"
            }
          },
          {
            "name": "user_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, only logs created by the caller",
              "default": false,
              "title": "User Only"
            },
            "description": "If true, only logs created by the caller"
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogResponse"
                  },
                  "title": "Response List Logs Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "Get All Service Statuses",
        "description": "Get all current service statuses and recent alerts",
        "operationId": "get_all_service_statuses_alerts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "logs"
        ],
        "summary": "Create System Alert",
        "description": "Generic system alert endpoint for all services\n\nExamples:\n- Tunnel: service=\"tunnel\", component=\"ssh\", status=\"down\"\n- Transcoding: service=\"transcoding\", component=\"mac-api\", status=\"critical\"\n- Storage: service=\"storage\", component=\"database\", status=\"warning\" \n- API: service=\"api\", component=\"auth\", status=\"healthy\"",
        "operationId": "create_system_alert_alerts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemAlert"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/services/{service}": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "Get Service Status",
        "description": "Get current status and recent alerts for a service/component",
        "operationId": "get_service_status_alerts_services__service__get",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          },
          {
            "name": "component",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Component"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/logs": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "Get System Alerts Logs",
        "description": "Get recent system monitor logs without authentication (public endpoint)",
        "operationId": "get_system_alerts_logs_alerts_logs_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/dashboard": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "System Dashboard",
        "description": "Simple HTML dashboard showing all service statuses",
        "operationId": "system_dashboard_alerts_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/artrack/health": {
      "get": {
        "summary": "Artrack Health",
        "operationId": "artrack_health_artrack_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/transcode/callback": {
      "post": {
        "summary": "Legacy Transcode Callback",
        "description": "Legacy callback endpoint - no longer needed but keeps Mac API happy",
        "operationId": "legacy_transcode_callback_transcode_callback_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/transcode/progress": {
      "post": {
        "summary": "Legacy Transcode Progress",
        "description": "Legacy progress endpoint - no longer needed but keeps Mac API happy",
        "operationId": "legacy_transcode_progress_transcode_progress_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/imgpreview": {
      "get": {
        "summary": "Image Preview",
        "description": "Serves a web-optimized preview for an image by storage object id.\nFalls back to the original file if no webview exists.",
        "operationId": "image_preview_imgpreview_get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityUserRef"
              },
              {
                "type": "null"
              }
            ]
          },
          "track": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityTrackRef"
              },
              {
                "type": "null"
              }
            ]
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "id",
          "timestamp",
          "type"
        ],
        "title": "ActivityItem"
      },
      "ActivityTrackRef": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ActivityTrackRef"
      },
      "ActivityUserRef": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          }
        },
        "type": "object",
        "title": "ActivityUserRef"
      },
      "AdminOverview": {
        "properties": {
          "active_users_24h": {
            "type": "integer",
            "title": "Active Users 24H"
          },
          "total_tracks": {
            "type": "integer",
            "title": "Total Tracks"
          },
          "tracks_today": {
            "type": "integer",
            "title": "Tracks Today"
          },
          "total_waypoints": {
            "type": "integer",
            "title": "Total Waypoints"
          },
          "waypoints_today": {
            "type": "integer",
            "title": "Waypoints Today"
          },
          "storage_used_bytes": {
            "type": "integer",
            "title": "Storage Used Bytes"
          },
          "processing_queue_count": {
            "type": "integer",
            "title": "Processing Queue Count"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "active_users_24h",
          "total_tracks",
          "tracks_today",
          "total_waypoints",
          "waypoints_today",
          "storage_used_bytes",
          "processing_queue_count",
          "last_updated"
        ],
        "title": "AdminOverview"
      },
      "AdminStorageItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "owner_user_id": {
            "type": "integer",
            "title": "Owner User Id"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key"
          },
          "original_filename": {
            "type": "string",
            "title": "Original Filename"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "file_size_bytes": {
            "type": "integer",
            "title": "File Size Bytes"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "owner_user_id",
          "object_key",
          "original_filename",
          "mime_type",
          "file_size_bytes",
          "is_public",
          "download_count",
          "created_at"
        ],
        "title": "AdminStorageItem"
      },
      "AdminStorageResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AdminStorageItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items"
        ],
        "title": "AdminStorageResponse"
      },
      "AdminTrackItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "visibility": {
            "type": "string",
            "title": "Visibility"
          },
          "track_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Track Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "waypoint_count": {
            "type": "integer",
            "title": "Waypoint Count"
          },
          "collaborator_count": {
            "type": "integer",
            "title": "Collaborator Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "owner_id",
          "visibility",
          "created_at",
          "waypoint_count",
          "collaborator_count"
        ],
        "title": "AdminTrackItem"
      },
      "AdminTracksResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AdminTrackItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items"
        ],
        "title": "AdminTracksResponse"
      },
      "AdminUserItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "trust_level": {
            "type": "string",
            "title": "Trust Level"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_active_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active At"
          },
          "track_count": {
            "type": "integer",
            "title": "Track Count"
          },
          "waypoint_count": {
            "type": "integer",
            "title": "Waypoint Count"
          },
          "storage_used_bytes": {
            "type": "integer",
            "title": "Storage Used Bytes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "display_name",
          "trust_level",
          "created_at",
          "track_count",
          "waypoint_count",
          "storage_used_bytes"
        ],
        "title": "AdminUserItem"
      },
      "AdminUsersResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AdminUserItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items"
        ],
        "title": "AdminUsersResponse"
      },
      "AnalyticsSeriesPoint": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "users": {
            "type": "integer",
            "title": "Users"
          },
          "tracks": {
            "type": "integer",
            "title": "Tracks"
          },
          "waypoints": {
            "type": "integer",
            "title": "Waypoints"
          }
        },
        "type": "object",
        "required": [
          "date",
          "users",
          "tracks",
          "waypoints"
        ],
        "title": "AnalyticsSeriesPoint"
      },
      "AnalyticsStoragePoint": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "storage": {
            "type": "number",
            "title": "Storage"
          }
        },
        "type": "object",
        "required": [
          "date",
          "storage"
        ],
        "title": "AnalyticsStoragePoint"
      },
      "AnalyticsTrackTypeItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "integer",
            "title": "Value"
          },
          "color": {
            "type": "string",
            "title": "Color"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value",
          "color"
        ],
        "title": "AnalyticsTrackTypeItem"
      },
      "AnalyticsUsage": {
        "properties": {
          "series": {
            "items": {
              "$ref": "#/components/schemas/AnalyticsSeriesPoint"
            },
            "type": "array",
            "title": "Series"
          },
          "trackTypes": {
            "items": {
              "$ref": "#/components/schemas/AnalyticsTrackTypeItem"
            },
            "type": "array",
            "title": "Tracktypes"
          },
          "storage": {
            "items": {
              "$ref": "#/components/schemas/AnalyticsStoragePoint"
            },
            "type": "array",
            "title": "Storage"
          }
        },
        "type": "object",
        "required": [
          "series",
          "trackTypes",
          "storage"
        ],
        "title": "AnalyticsUsage"
      },
      "AudioGenRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Id"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "AudioGenRequest"
      },
      "AuthResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "trust_level": {
            "type": "string",
            "title": "Trust Level"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "default": 86400
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "access_token",
          "api_key",
          "trust_level"
        ],
        "title": "AuthResponse"
      },
      "Body_complete_upload_session_artrack_upload__session_id__complete_post": {
        "properties": {
          "waypoint_id": {
            "type": "integer",
            "title": "Waypoint Id"
          }
        },
        "type": "object",
        "required": [
          "waypoint_id"
        ],
        "title": "Body_complete_upload_session_artrack_upload__session_id__complete_post"
      },
      "Body_replace_file_storage_files__object_id__put": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_replace_file_storage_files__object_id__put"
      },
      "Body_upload_chunk_part_artrack_upload__session_id___media_slot__parts__index__put": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_chunk_part_artrack_upload__session_id___media_slot__parts__index__put"
      },
      "Body_upload_file_storage_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "owner_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Email"
          },
          "collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Id"
          },
          "link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Id"
          },
          "analyze": {
            "type": "boolean",
            "title": "Analyze",
            "default": false
          },
          "reference_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Id"
          },
          "hls_result": {
            "type": "boolean",
            "title": "Hls Result",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_storage_upload_post"
      },
      "Body_upload_media_file_artrack_upload__session_id___media_slot__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "waypoint_id": {
            "type": "integer",
            "title": "Waypoint Id"
          },
          "media_type": {
            "type": "string",
            "title": "Media Type"
          },
          "metadata_json": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          }
        },
        "type": "object",
        "required": [
          "file",
          "waypoint_id",
          "media_type"
        ],
        "title": "Body_upload_media_file_artrack_upload__session_id___media_slot__post"
      },
      "ChunkCompleteRequest": {
        "properties": {
          "upload_id": {
            "type": "string",
            "title": "Upload Id"
          }
        },
        "type": "object",
        "required": [
          "upload_id"
        ],
        "title": "ChunkCompleteRequest"
      },
      "ChunkInitRequest": {
        "properties": {
          "waypoint_id": {
            "type": "integer",
            "title": "Waypoint Id"
          },
          "media_type": {
            "type": "string",
            "title": "Media Type"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          }
        },
        "type": "object",
        "required": [
          "waypoint_id",
          "media_type",
          "size_bytes"
        ],
        "title": "ChunkInitRequest"
      },
      "ChunkInitResponse": {
        "properties": {
          "upload_id": {
            "type": "string",
            "title": "Upload Id"
          }
        },
        "type": "object",
        "required": [
          "upload_id"
        ],
        "title": "ChunkInitResponse"
      },
      "CleanupByAgeRequest": {
        "properties": {
          "days": {
            "type": "integer",
            "title": "Days"
          }
        },
        "type": "object",
        "required": [
          "days"
        ],
        "title": "CleanupByAgeRequest"
      },
      "CleanupByCollectionRequest": {
        "properties": {
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          }
        },
        "type": "object",
        "required": [
          "collection_id"
        ],
        "title": "CleanupByCollectionRequest"
      },
      "CleanupByUserRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "CleanupByUserRequest"
      },
      "CleanupResponse": {
        "properties": {
          "deleted_count": {
            "type": "integer",
            "title": "Deleted Count"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "deleted_count",
          "message"
        ],
        "title": "CleanupResponse"
      },
      "CollectionInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "item_count": {
            "type": "integer",
            "title": "Item Count"
          },
          "owner_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "item_count"
        ],
        "title": "CollectionInfo"
      },
      "DepthJobRequest": {
        "properties": {
          "image": {
            "type": "string",
            "title": "Image"
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "DepthJobRequest"
      },
      "ElevenLabsTTSConfig": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The model to use, e.g., 'eleven_multilingual_v2'",
            "default": "eleven_multilingual_v2"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice to use",
            "default": "JBFqnCBsd6RMkjVDRZzb"
          },
          "stability": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Stability",
            "description": "Voice stability, from 0.0 to 1.0",
            "default": 0.5
          },
          "clarity": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Clarity",
            "description": "Voice clarity/similarity, from 0.0 to 1.0",
            "default": 0.75
          }
        },
        "type": "object",
        "title": "ElevenLabsTTSConfig"
      },
      "ErrorLog": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "level": {
            "type": "string",
            "title": "Level"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint"
          }
        },
        "type": "object",
        "required": [
          "id",
          "level",
          "message"
        ],
        "title": "ErrorLog"
      },
      "GPSPointBatchCreate": {
        "properties": {
          "trackId": {
            "type": "integer",
            "title": "Trackid"
          },
          "points": {
            "items": {
              "$ref": "#/components/schemas/GPSPointCreate"
            },
            "type": "array",
            "title": "Points"
          },
          "batchId": {
            "type": "string",
            "title": "Batchid"
          }
        },
        "type": "object",
        "required": [
          "trackId",
          "points",
          "batchId"
        ],
        "title": "GPSPointBatchCreate"
      },
      "GPSPointBatchResponse": {
        "properties": {
          "batchId": {
            "type": "string",
            "title": "Batchid"
          },
          "trackId": {
            "type": "integer",
            "title": "Trackid"
          },
          "pointsCreated": {
            "type": "integer",
            "title": "Pointscreated"
          },
          "pointsSkipped": {
            "type": "integer",
            "title": "Pointsskipped"
          },
          "processingTimeMs": {
            "type": "number",
            "title": "Processingtimems"
          }
        },
        "type": "object",
        "required": [
          "batchId",
          "trackId",
          "pointsCreated",
          "pointsSkipped",
          "processingTimeMs"
        ],
        "title": "GPSPointBatchResponse"
      },
      "GPSPointCreate": {
        "properties": {
          "trackId": {
            "type": "integer",
            "title": "Trackid"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "accuracy": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Accuracy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed"
          },
          "course": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 360.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Course"
          },
          "isFromKalmanFilter": {
            "type": "boolean",
            "title": "Isfromkalmanfilter",
            "default": false
          },
          "segmentId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentid"
          },
          "connectionQuality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectionquality"
          }
        },
        "type": "object",
        "required": [
          "trackId",
          "latitude",
          "longitude",
          "accuracy",
          "timestamp"
        ],
        "title": "GPSPointCreate"
      },
      "GPSPointResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "trackId": {
            "type": "integer",
            "title": "Trackid"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "accuracy": {
            "type": "number",
            "title": "Accuracy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed"
          },
          "course": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course"
          },
          "isFromKalmanFilter": {
            "type": "boolean",
            "title": "Isfromkalmanfilter"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          }
        },
        "type": "object",
        "required": [
          "id",
          "trackId",
          "latitude",
          "longitude",
          "altitude",
          "accuracy",
          "timestamp",
          "speed",
          "course",
          "isFromKalmanFilter",
          "createdAt"
        ],
        "title": "GPSPointResponse"
      },
      "GPSTrackStatsResponse": {
        "properties": {
          "trackId": {
            "type": "integer",
            "title": "Trackid"
          },
          "totalPoints": {
            "type": "integer",
            "title": "Totalpoints"
          },
          "totalDistance": {
            "type": "number",
            "title": "Totaldistance"
          },
          "trackDuration": {
            "type": "number",
            "title": "Trackduration"
          },
          "averageSpeed": {
            "type": "number",
            "title": "Averagespeed"
          },
          "maxSpeed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxspeed"
          },
          "minAltitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minaltitude"
          },
          "maxAltitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxaltitude"
          },
          "startTime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Starttime"
          },
          "endTime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endtime"
          }
        },
        "type": "object",
        "required": [
          "trackId",
          "totalPoints",
          "totalDistance",
          "trackDuration",
          "averageSpeed",
          "maxSpeed",
          "minAltitude",
          "maxAltitude",
          "startTime",
          "endTime"
        ],
        "title": "GPSTrackStatsResponse"
      },
      "GoogleAuthRequest": {
        "properties": {
          "id_token": {
            "type": "string",
            "title": "Id Token"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "id_token"
        ],
        "title": "GoogleAuthRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageGenRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Id"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          },
          "collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Id"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "ImageGenRequest"
      },
      "LogCreate": {
        "properties": {
          "level": {
            "type": "string",
            "title": "Level",
            "description": "debug|info|warning|error|critical",
            "default": "info"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "app_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Name"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id"
          },
          "platform": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform"
          },
          "build": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "LogCreate"
      },
      "LogResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "level": {
            "type": "string",
            "title": "Level"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "app_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Name"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id"
          },
          "platform": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform"
          },
          "build": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "level",
          "message"
        ],
        "title": "LogResponse"
      },
      "MediaAnalysis": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories"
          },
          "safety_rating": {
            "type": "string",
            "title": "Safety Rating"
          },
          "quality_score": {
            "type": "number",
            "title": "Quality Score"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "description",
          "categories",
          "safety_rating",
          "quality_score",
          "confidence"
        ],
        "title": "MediaAnalysis"
      },
      "MediaFileResponse": {
        "properties": {
          "media_id": {
            "type": "integer",
            "title": "Media Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "processing_state": {
            "type": "string",
            "title": "Processing State"
          },
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MediaAnalysis"
              },
              {
                "type": "null"
              }
            ]
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "storage_object_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Object Id"
          }
        },
        "type": "object",
        "required": [
          "media_id",
          "type",
          "processing_state"
        ],
        "title": "MediaFileResponse"
      },
      "MediaUploadUrl": {
        "properties": {
          "media_slot": {
            "type": "integer",
            "title": "Media Slot"
          },
          "upload_url": {
            "type": "string",
            "title": "Upload Url"
          },
          "max_size_bytes": {
            "type": "integer",
            "title": "Max Size Bytes"
          }
        },
        "type": "object",
        "required": [
          "media_slot",
          "upload_url",
          "max_size_bytes"
        ],
        "title": "MediaUploadUrl"
      },
      "MessageResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "MessageResponse"
      },
      "ModerationQueueItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "track_id": {
            "type": "integer",
            "title": "Track Id"
          },
          "recorded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Recorded At"
          },
          "processing_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing State"
          },
          "moderation_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moderation Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "track_id",
          "recorded_at"
        ],
        "title": "ModerationQueueItem"
      },
      "ModerationQueueResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ModerationQueueItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items"
        ],
        "title": "ModerationQueueResponse"
      },
      "ModerationResult": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "waypoint_id": {
            "type": "integer",
            "title": "Waypoint Id"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "status",
          "waypoint_id",
          "action"
        ],
        "title": "ModerationResult"
      },
      "OpenAITTSConfig": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model to use, e.g., 'tts-1' or 'tts-1-hd'",
            "default": "tts-1"
          },
          "voice": {
            "type": "string",
            "enum": [
              "alloy",
              "echo",
              "fable",
              "onyx",
              "nova",
              "shimmer"
            ],
            "title": "Voice",
            "description": "The voice to use for the audio",
            "default": "nova"
          },
          "speed": {
            "type": "number",
            "maximum": 4.0,
            "minimum": 0.25,
            "title": "Speed",
            "description": "The speaking rate, from 0.25 to 4.0",
            "default": 1.0
          },
          "output_format": {
            "type": "string",
            "enum": [
              "mp3",
              "opus",
              "aac",
              "flac"
            ],
            "title": "Output Format",
            "description": "The output format for the audio",
            "default": "mp3"
          }
        },
        "type": "object",
        "title": "OpenAITTSConfig"
      },
      "PerformanceMetrics": {
        "properties": {
          "avg_response_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Response Time"
          },
          "uptime_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uptime Percentage"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "requests_per_hour": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requests Per Hour"
          }
        },
        "type": "object",
        "title": "PerformanceMetrics"
      },
      "Prompt": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Images"
          },
          "audio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio"
          },
          "video": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Prompt"
      },
      "QuotaInfo": {
        "properties": {
          "storage_bytes": {
            "type": "integer",
            "title": "Storage Bytes"
          },
          "storage_limit": {
            "type": "integer",
            "title": "Storage Limit"
          },
          "uploads_this_month": {
            "type": "integer",
            "title": "Uploads This Month"
          },
          "upload_limit": {
            "type": "integer",
            "title": "Upload Limit"
          }
        },
        "type": "object",
        "required": [
          "storage_bytes",
          "storage_limit",
          "uploads_this_month",
          "upload_limit"
        ],
        "title": "QuotaInfo"
      },
      "RemoteFetchRequest": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "owner_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Email"
          },
          "collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Id"
          },
          "link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Id"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          },
          "analyze": {
            "type": "boolean",
            "title": "Analyze",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "RemoteFetchRequest"
      },
      "SegmentEndRequest": {
        "properties": {
          "ended_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ended At"
          }
        },
        "type": "object",
        "title": "SegmentEndRequest"
      },
      "SegmentEndResponse": {
        "properties": {
          "segment_id": {
            "type": "integer",
            "title": "Segment Id"
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "title": "Ended At"
          }
        },
        "type": "object",
        "required": [
          "segment_id",
          "ended_at"
        ],
        "title": "SegmentEndResponse"
      },
      "SegmentItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "ended_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ended At"
          },
          "points": {
            "type": "integer",
            "title": "Points"
          },
          "distance_m": {
            "type": "number",
            "title": "Distance M"
          }
        },
        "type": "object",
        "required": [
          "id",
          "started_at",
          "ended_at",
          "points",
          "distance_m"
        ],
        "title": "SegmentItem"
      },
      "SegmentStartRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "SegmentStartRequest"
      },
      "SegmentStartResponse": {
        "properties": {
          "segment_id": {
            "type": "integer",
            "title": "Segment Id"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          }
        },
        "type": "object",
        "required": [
          "segment_id",
          "started_at"
        ],
        "title": "SegmentStartResponse"
      },
      "ServiceStatusResponse": {
        "properties": {
          "service": {
            "type": "string",
            "title": "Service"
          },
          "component": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Component"
          },
          "current_status": {
            "type": "string",
            "title": "Current Status"
          },
          "last_update": {
            "type": "string",
            "format": "date-time",
            "title": "Last Update"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "uptime_percentage": {
            "type": "number",
            "title": "Uptime Percentage"
          },
          "recent_alerts": {
            "items": {
              "$ref": "#/components/schemas/LogResponse"
            },
            "type": "array",
            "title": "Recent Alerts"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "service",
          "component",
          "current_status",
          "last_update",
          "message",
          "uptime_percentage",
          "recent_alerts"
        ],
        "title": "ServiceStatusResponse"
      },
      "SimpleUserRef": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          }
        },
        "type": "object",
        "title": "SimpleUserRef"
      },
      "SpeechRequest": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "speech_request"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "content": {
            "$ref": "#/components/schemas/TTSContent"
          },
          "config": {
            "$ref": "#/components/schemas/TTSConfig"
          },
          "save_options": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Save Options",
            "default": {
              "is_public": false
            }
          },
          "collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "timestamp",
          "content",
          "config"
        ],
        "title": "SpeechRequest"
      },
      "StorageListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/StorageObjectResponse"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "StorageListResponse"
      },
      "StorageObjectResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          },
          "owner_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Email"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key"
          },
          "original_filename": {
            "type": "string",
            "title": "Original Filename"
          },
          "file_url": {
            "type": "string",
            "title": "File Url"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "webview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webview Url"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "file_size_bytes": {
            "type": "integer",
            "title": "File Size Bytes"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Id"
          },
          "link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "likes": {
            "type": "integer",
            "title": "Likes",
            "default": 0
          },
          "width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds"
          },
          "bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bit Rate"
          },
          "ai_safety_rating": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Safety Rating"
          },
          "metadata_json": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata Json",
            "default": {}
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "ai_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Category"
          },
          "ai_danger_potential": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Danger Potential"
          },
          "hls_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hls Url"
          },
          "transcoding_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcoding Status"
          },
          "transcoding_progress": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcoding Progress"
          },
          "transcoding_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcoding Error"
          },
          "transcoded_file_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcoded File Size Bytes"
          },
          "ai_safety_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Safety Status"
          },
          "ai_safety_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Safety Error"
          },
          "ai_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Title"
          },
          "ai_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Subtitle"
          },
          "ai_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Tags"
          },
          "ai_collections": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Collections"
          },
          "safety_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Info"
          }
        },
        "type": "object",
        "required": [
          "id",
          "object_key",
          "original_filename",
          "file_url",
          "mime_type",
          "file_size_bytes",
          "checksum",
          "is_public",
          "created_at",
          "updated_at"
        ],
        "title": "StorageObjectResponse"
      },
      "StorageObjectUpdate": {
        "properties": {
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Id"
          },
          "link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ai_safety_rating": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Safety Rating"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          },
          "original_filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Filename"
          },
          "ai_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Title"
          },
          "ai_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Subtitle"
          },
          "ai_tags": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Tags"
          },
          "ai_collections": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Collections"
          },
          "safety_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Info"
          }
        },
        "type": "object",
        "title": "StorageObjectUpdate"
      },
      "SyncStatus": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "last_sync_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Sync At"
          },
          "pending_uploads": {
            "type": "integer",
            "title": "Pending Uploads"
          },
          "pending_analysis": {
            "type": "integer",
            "title": "Pending Analysis"
          },
          "failed_uploads": {
            "type": "integer",
            "title": "Failed Uploads"
          },
          "quota_used": {
            "$ref": "#/components/schemas/QuotaInfo"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "last_sync_at",
          "pending_uploads",
          "pending_analysis",
          "failed_uploads",
          "quota_used"
        ],
        "title": "SyncStatus"
      },
      "SystemAlert": {
        "properties": {
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service name (e.g., 'tunnel', 'transcoding', 'storage', 'api')"
          },
          "component": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Component",
            "description": "Component within service (e.g., 'mac-api', 'queue', 'database')"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "healthy|warning|critical|down|recovering"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "description": "debug|info|warning|error|critical",
            "default": "info"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "escalation_policy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Escalation Policy",
            "description": "immediate|after_5min|after_15min|none"
          }
        },
        "type": "object",
        "required": [
          "service",
          "status",
          "message"
        ],
        "title": "SystemAlert"
      },
      "SystemHealth": {
        "properties": {
          "db_ok": {
            "type": "boolean",
            "title": "Db Ok"
          },
          "storage_ok": {
            "type": "boolean",
            "title": "Storage Ok"
          },
          "ai_services_ok": {
            "type": "boolean",
            "title": "Ai Services Ok"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time"
          }
        },
        "type": "object",
        "required": [
          "db_ok",
          "storage_ok",
          "ai_services_ok",
          "time"
        ],
        "title": "SystemHealth"
      },
      "TTSConfig": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider",
            "default": "openai"
          },
          "output_format": {
            "type": "string",
            "title": "Output Format",
            "default": "mp3"
          },
          "openai": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OpenAITTSConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "elevenlabs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ElevenLabsTTSConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "voice_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Mapping"
          },
          "dialog_mode": {
            "type": "boolean",
            "title": "Dialog Mode",
            "default": false
          },
          "ai_gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "title": "Ai Gender",
            "default": "female"
          },
          "narrator_gender": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "male",
                  "female"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Narrator Gender"
          },
          "analysis_user_hint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis User Hint"
          },
          "analysis_override": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis Override"
          },
          "generate_title_image": {
            "type": "boolean",
            "title": "Generate Title Image",
            "default": false
          },
          "add_sfx": {
            "type": "boolean",
            "title": "Add Sfx",
            "default": false
          },
          "add_music": {
            "type": "boolean",
            "title": "Add Music",
            "default": false
          },
          "manual_music_storage_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Music Storage Id"
          },
          "music_loop": {
            "type": "boolean",
            "title": "Music Loop",
            "default": true
          },
          "music_stop_at_end": {
            "type": "boolean",
            "title": "Music Stop At End",
            "default": false
          },
          "analyze_only": {
            "type": "boolean",
            "title": "Analyze Only",
            "default": false
          }
        },
        "type": "object",
        "title": "TTSConfig"
      },
      "TTSContent": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "default": "de-DE"
          },
          "voice": {
            "type": "string",
            "title": "Voice",
            "default": "nova"
          },
          "pitch": {
            "type": "number",
            "title": "Pitch",
            "default": 0.0
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "default": 1.0
          },
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability"
          },
          "clarity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clarity"
          },
          "style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TTSContent"
      },
      "TrackCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility",
            "default": "private"
          },
          "track_type": {
            "type": "string",
            "title": "Track Type",
            "default": "hiking"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "client_track_id": {
            "type": "string",
            "title": "Client Track Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "client_track_id"
        ],
        "title": "TrackCreate"
      },
      "TrackResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "visibility": {
            "type": "string",
            "title": "Visibility"
          },
          "track_type": {
            "type": "string",
            "title": "Track Type"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "client_track_id": {
            "type": "string",
            "title": "Client Track Id"
          },
          "stats": {
            "$ref": "#/components/schemas/TrackStats"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "visibility",
          "track_type",
          "tags",
          "client_track_id",
          "stats",
          "created_at",
          "updated_at"
        ],
        "title": "TrackResponse"
      },
      "TrackStats": {
        "properties": {
          "total_waypoints": {
            "type": "integer",
            "title": "Total Waypoints"
          },
          "processed_waypoints": {
            "type": "integer",
            "title": "Processed Waypoints"
          },
          "pending_analysis": {
            "type": "integer",
            "title": "Pending Analysis"
          },
          "distance_meters": {
            "type": "number",
            "title": "Distance Meters"
          },
          "duration_seconds": {
            "type": "integer",
            "title": "Duration Seconds"
          }
        },
        "type": "object",
        "required": [
          "total_waypoints",
          "processed_waypoints",
          "pending_analysis",
          "distance_meters",
          "duration_seconds"
        ],
        "title": "TrackStats"
      },
      "TransferOwnerByLinkRequest": {
        "properties": {
          "link_id": {
            "type": "string",
            "title": "Link Id"
          },
          "owner_email": {
            "type": "string",
            "title": "Owner Email"
          }
        },
        "type": "object",
        "required": [
          "link_id",
          "owner_email"
        ],
        "title": "TransferOwnerByLinkRequest"
      },
      "UploadSession": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "media_upload_urls": {
            "items": {
              "$ref": "#/components/schemas/MediaUploadUrl"
            },
            "type": "array",
            "title": "Media Upload Urls"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "media_upload_urls",
          "expires_at"
        ],
        "title": "UploadSession"
      },
      "UpscaleRequest": {
        "properties": {
          "image_b64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image B64"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "output_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Format",
            "default": "webp"
          },
          "link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Id"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          }
        },
        "type": "object",
        "title": "UpscaleRequest"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password",
          "display_name",
          "device_id"
        ],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password",
          "device_id"
        ],
        "title": "UserLogin"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "trust_level": {
            "type": "string",
            "title": "Trust Level"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "display_name",
          "trust_level",
          "created_at"
        ],
        "title": "UserResponse"
      },
      "UserWithCollections": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "collection_count": {
            "type": "integer",
            "title": "Collection Count"
          }
        },
        "type": "object",
        "required": [
          "email",
          "display_name",
          "collection_count"
        ],
        "title": "UserWithCollections"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Visibility": {
        "type": "string",
        "enum": [
          "public",
          "followers",
          "private"
        ],
        "title": "Visibility"
      },
      "WaypointBatch": {
        "properties": {
          "waypoints": {
            "items": {
              "$ref": "#/components/schemas/WaypointCreate"
            },
            "type": "array",
            "title": "Waypoints"
          }
        },
        "type": "object",
        "required": [
          "waypoints"
        ],
        "title": "WaypointBatch"
      },
      "WaypointBatchResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/WaypointCreateResponse"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "WaypointBatchResponse"
      },
      "WaypointCreate": {
        "properties": {
          "client_waypoint_id": {
            "type": "string",
            "title": "Client Waypoint Id"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "accuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accuracy"
          },
          "recorded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Recorded At"
          },
          "user_description": {
            "type": "string",
            "title": "User Description",
            "default": ""
          },
          "media_count": {
            "type": "integer",
            "title": "Media Count",
            "default": 0
          },
          "waypoint_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waypoint Type"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          },
          "segment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment Id"
          }
        },
        "type": "object",
        "required": [
          "client_waypoint_id",
          "latitude",
          "longitude",
          "recorded_at"
        ],
        "title": "WaypointCreate"
      },
      "WaypointCreateResponse": {
        "properties": {
          "client_waypoint_id": {
            "type": "string",
            "title": "Client Waypoint Id"
          },
          "waypoint_id": {
            "type": "integer",
            "title": "Waypoint Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "upload_session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UploadSession"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "client_waypoint_id",
          "waypoint_id",
          "status"
        ],
        "title": "WaypointCreateResponse"
      },
      "WaypointDetailResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "track_id": {
            "type": "integer",
            "title": "Track Id"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "accuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accuracy"
          },
          "recorded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Recorded At"
          },
          "user_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Description"
          },
          "processing_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing State"
          },
          "moderation_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moderation Status"
          },
          "waypoint_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waypoint Type"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          },
          "segment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment Id"
          },
          "media": {
            "items": {
              "$ref": "#/components/schemas/MediaFileResponse"
            },
            "type": "array",
            "title": "Media",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "track_id",
          "latitude",
          "longitude",
          "recorded_at"
        ],
        "title": "WaypointDetailResponse"
      },
      "WaypointListItem": {
        "properties": {
          "waypoint_id": {
            "type": "integer",
            "title": "Waypoint Id"
          },
          "processing_state": {
            "type": "string",
            "title": "Processing State"
          },
          "media": {
            "items": {
              "$ref": "#/components/schemas/MediaFileResponse"
            },
            "type": "array",
            "title": "Media"
          },
          "moderation_status": {
            "type": "string",
            "title": "Moderation Status"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          },
          "track_id": {
            "type": "integer",
            "title": "Track Id"
          },
          "track_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Track Name"
          },
          "creator_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator Id"
          },
          "creator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SimpleUserRef"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WaypointLocation"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "media_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Count"
          },
          "waypoint_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waypoint Type"
          },
          "segment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment Id"
          }
        },
        "type": "object",
        "required": [
          "waypoint_id",
          "processing_state",
          "media",
          "moderation_status",
          "track_id"
        ],
        "title": "WaypointListItem"
      },
      "WaypointLocation": {
        "properties": {
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          }
        },
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "WaypointLocation"
      },
      "WaypointStatusResponse": {
        "properties": {
          "waypoint_id": {
            "type": "integer",
            "title": "Waypoint Id"
          },
          "processing_state": {
            "type": "string",
            "title": "Processing State"
          },
          "media": {
            "items": {
              "$ref": "#/components/schemas/MediaFileResponse"
            },
            "type": "array",
            "title": "Media"
          },
          "moderation_status": {
            "type": "string",
            "title": "Moderation Status"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          }
        },
        "type": "object",
        "required": [
          "waypoint_id",
          "processing_state",
          "media",
          "moderation_status"
        ],
        "title": "WaypointStatusResponse"
      },
      "WaypointUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "WaypointUpdate"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  }
}